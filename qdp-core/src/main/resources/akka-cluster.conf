akka {
  actor {
    provider = "cluster"
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }
  log-dead-letters = 0
  cluster {
    seed-nodes = ["akka://qdp-akka-system@127.0.0.1:2551"]

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  actor {
      serializers {
        jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
      }

      serialization-bindings {
        "com.quantori.qdp.core.data.search.MoleculeSourceRootActor$Command" = jackson-cbor
        "com.quantori.qdp.core.data.search.MoleculeSearchActor$Command" = jackson-cbor
        "com.quantori.qdp.core.data.search.MoleculeSearchActor$Close" = jackson-cbor
        "com.quantori.qdp.core.data.model.SearchResult" = jackson-cbor
        "com.quantori.qdp.core.data.model.StorageSearchRequest" = jackson-cbor
        "com.quantori.qdp.core.task.actor.StreamTaskActor$Command" = jackson-cbor
        "com.quantori.qdp.core.task.model.StreamTaskStatus" = jackson-cbor
        "com.quantori.qdp.core.task.model.StreamTaskDetails" = jackson-cbor
        "com.quantori.qdp.core.data.model.SearchStructure" = jackson-cbor
        "com.quantori.qdp.core.data.service.ExportServiceImpl$ExportResult" = jackson-cbor
        "com.quantori.qdp.core.task.model.StreamTaskProcessingException" = jackson-cbor
      }
  }
}